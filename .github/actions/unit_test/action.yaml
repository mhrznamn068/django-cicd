name: Unit Testing
description: Unit Testing
inputs:
  #PYTHON-VERSION:
  #  description: Python Version
  #  required: true
  #  default: "3.12"
  PYTHON_DEP_PATH:
    description: Path for the Python Dependencies file
    required: true
    default: "./app/requirements.txt"
  PROJECT_APP_PATH:
    description: Application Project Root Path
    required: true
    default: "./app"
  SETTINGS_DB_PORT:
    description: Database Port
    required: true
  SETTINGS_DB_NAME:
    description: Database name
    required: true
  SETTINGS_DB_USER:
    description: Database User
    required: true
  SETTINGS_DB_PASSWORD:
    description: Database password
    required: true

matrix:
  python-version:
    - "3.12"
runs:
  using: composite
  steps:
    - name: CheckOut Actions
      uses: actions/checkout@v3

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"

    - name: Install requirements
      run: |
        pip install --upgrade pip
        pip install -r ${{ inputs.PYTHON_DEP_PATH }}
      shell: bash

    - name: Database Migration
      run: |
        python manage.py makemigrations
        python manage.py migrate
      working-directory: ${{ inputs.PROJECT_APP_PATH}}
      env:
        SETTINGS_DB_HOST: "localhost"
        SETTINGS_DB_PORT: ${{ inputs.SETTINGS_DB_PORT }}
        SETTINGS_DB_NAME: ${{ inputs.SETTINGS_DB_NAME }}
        SETTINGS_DB_USER: ${{ inputs.SETTINGS_DB_USER }}
        SETTINGS_DB_PASSWORD: ${{ inputs.SETTINGS_DB_PASSWORD }}
      shell: bash

    - name: Run Test
      run: |
        python manage.py test
        #sudo chown -R runner:runner ./
        #python manage.py collectstatic --noinput
        coverage run -m pytest -v -s
        coverage report -m
        flake8
      working-directory: ${{ inputs.PROJECT_APP_PATH}}
      env:
        SETTINGS_DB_HOST: "localhost"
        SETTINGS_DB_PORT: ${{ inputs.SETTINGS_DB_PORT }}
        SETTINGS_DB_NAME: ${{ inputs.SETTINGS_DB_NAME }}
        SETTINGS_DB_USER: ${{ inputs.SETTINGS_DB_USER }}
        SETTINGS_DB_PASSWORD: ${{ inputs.SETTINGS_DB_PASSWORD }}
      shell: bash