name: Django CI

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      security-events: write
      pull-requests: write
    strategy:
      matrix:
        python-version: ["3.12"]
    env:
      POSTGRES_USER: "demoproject"
      POSTGRES_PASSWORD: "demoproject123"
      POSTGRES_DB: "demoproject"
      FAIL_LEVEL: ERROR
      ENV_TYPE: venv
      APP_PATH: ./app
      DEP_PATH: ./app/requirements.txt

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      sonarqube:
        image: sonarqube:9.9.3-community
        ports:
          - 9000:9000

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Unit Testing
      #uses: ./.github/actions/unit_test
      uses: mhrznamn068/github-actions/.github/actions/unit-testing/python@master
      with:
        PROJECT_NAME: ${{ github.repository }}
        PYTHON_VERSION: ${{ matrix.python-version }}
        PYTHON_DEP_PATH: ${{ env.DEP_PATH }}
        PROJECT_APP_PATH: ${{ env.APP_PATH }}
        SETTINGS_DB_PORT: 5432
        SETTINGS_DB_NAME: ${{ env.POSTGRES_DB }}
        SETTINGS_DB_USER: ${{ env.POSTGRES_USER }}
        SETTINGS_DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

    - name: Security Testing
      #uses: ./.github/actions/security
      uses: mhrznamn068/github-actions/.github/actions/security/snyk-sca@master
      with:
        PROJECT_NAME: "django-cicd"
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        PYTHON_VERSION: ${{ matrix.python-version }}
        PYTHON_DEP_PATH: ${{ env.DEP_PATH }}
        PROJECT_APP_PATH: ${{ env.APP_PATH }}

    - name: Generate Sonarqube Token
      run: |
        SONARQUBE_TOKEN=$(curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "name=admin" \
          -u admin:admin http://localhost:9000/api/user_tokens/generate | jq -r .token)
        echo "SONARQUBE_TOKEN=$SONARQUBE_TOKEN" >> $GITHUB_ENV

    - name: SAST
      uses: mhrznamn068/github-actions/.github/actions/security/sast@master
      with:
        PROJECT_NAME: "django-cicd"
        VAULT_ENABLED: false
        VAULT_SERVER: "http://localhost"
        VAULT_SECRETS_PATH: "app/django-cicd"
        VAULT_TOKEN: ""
        SONARQUBE_HOST: "http://localhost:9000"
        SONARQUBE_TOKEN: ${{ env.SONARQUBE_TOKEN }}
